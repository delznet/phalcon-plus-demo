;应用基础部分
[app]
;缓存路径，默认相对于项目根目录var/cache
;cache_dir = "var/cache"
;日志保存路径，默认相对于
;log_dir = "var/logs"
;是否开启debug服务，需要安装xdebug
;debug = false


[view]
;视图文件路径，默认相对于项目根目录resources/views
;dir = "resources/views"
;常情况下，出于性能方面的考虑，Volt模板引擎在重新编译模板时只会检查子模板中的内容变更。
;所以建议设置Volt模板引擎的选项参数 'compileAlways' => true
;这样模板会实时编译，并检查父模板中的内容变更。
;volt.compile_always = false

;安全部分
[security]
secret = "PcV6jGbJ6vfVw7hfKIFDGA"

;网址服务部分
[url]
;站点基地址
;default.base_path = "/"
;静态文件版本
;default.static.version = "0.1"
;静态文件基地址
;default.static.base_uri = "/"

;注释解析器配置部分
[annotations]
;设置注释服务apc缓存时间，可不设置，默认3600
apc.lifetime=1

;路由部分
[router]
;默认模块默认命名空间，默认为App\Controller
;default.default_namespace = "App\Controller"
;默认模块默认控制器，默认为Index
;default.default_controller = "Index"
;默认模块默认控制器方法，默认为index
;default.default_action = "index"
;默认模块默认404控制器，默认为Error
;default.not_found_controller = "Error"
;默认模块默认404控制器方法，默认为notFound
;default.not_found_action = "notFound"
;注解路由部分
;default.annotations是个数组，控制器名=>网址前缀的格式
default.annotations.Index = "/"
default.annotations.Api = "/api"
default.annotations.App\Controller\Admin\Index = "/admin"
default.annotations.User = "/user"

;数据库部分(单库)
[db]
;数据库日志用那个日志服务，必须在services中配置才可以
;在事件监听中启用了Delz\PhalconPlus\EventListener\DbLogListener才起作用
logger = "dblogger"
;数据库分析服务用那个日志服务
;在事件监听中启用了Delz\PhalconPlus\EventListener\DbProfilerListener才起作用
profile.logger = "dbProfileLogger"
;下面是数据库配置
adapter = "mysql"
host = "localhost"
dbname = ""
username = ""
password = ""
port = 3306
;数据库(主从)
;主,与服务名称对应
;[dbmaster]
;adapter = "mysql"
;is_master = true
;host = "localhost"
;dbname = ""
;username = ""
;password = ""
;port = 3306
;从,与服务名称对应
[dbslave]
;adapter = "mysql"
;is_master = false
;connections.0.host = "localhost"
;connections.0.dbname = ""
;connections.0.username = ""
;connections.0.password = ""
;connections.0.port = 3306
;connections.1.host = "localhost"
;connections.1.dbname = ""
;connections.1.username = ""
;connections.1.password = ""
;connections.1.port = 3306

;模型部分
[model]
;表名前缀
prefix = ""
;模型metadata缓存时间;单位为秒,默认86400
;metadata.lifetime = 86400

;session设置
[session]
;session储存类型，有files/memcached/memcache/redis,默认files
adapter = "files"
;session为memcached的缓存时间，默认为3600
;memcached.lifetime = 3600
;session为memcached的服务器组配置
;memcached.servers.0.host = "host1"
;memcached.servers.0.port = 11211
;memcached.servers.0.weight = 1
;memcached.servers.1.host = "host2"
;memcached.servers.1.port = 11211
;memcached.servers.1.weight = 1
;session为memcache的缓存时间，默认为3600
;memcache.lifetime = 3600
;是否持久化，默认为true
;memcache.persistent = true
;服务器地址, 默认为127.0.0.1
;memcache.host = "127.0.0.1"
;服务端口,默认为11211
;memcache.port = 11211
;session为redis的缓存时间，默认为3600
;redis.lifetime = 3600
;是否持久化，默认为false
;redis.persistent = false
;索引,默认为1
;redis.index = 1
;服务器地址, 默认为127.0.0.1
;redis.host = "127.0.0.1"
;服务端口,默认为6379
;redis.port = 6379


;服务部分
[services]
;注释解析器服务
annotations = "Delz\PhalconPlus\ServiceProvider\Providers\Annotations"
;Cookie服务
cookies = "Delz\PhalconPlus\ServiceProvider\Providers\Cookies"
;加密服务
crypt = "Delz\PhalconPlus\ServiceProvider\Providers\Crypt"
;数据库服务(单库)
db = "Delz\PhalconPlus\ServiceProvider\Providers\Db"
;数据库主从
;dbmaster="Delz\PhalconPlus\ServiceProvider\Providers\Db"
;dbslave="Delz\PhalconPlus\ServiceProvider\Providers\Db"
;调度控制器服务
dispatcher = "Delz\PhalconPlus\ServiceProvider\Providers\Dispatcher"
;事件管理服务
eventsManager = "Delz\PhalconPlus\ServiceProvider\Providers\EventManager"
;过滤器服务
filter = "Delz\PhalconPlus\ServiceProvider\Providers\Filter"
;模型管理器服务
modelsManager = "Delz\PhalconPlus\ServiceProvider\Providers\ModelsManager"
;模型元数据服务
modelsMetadata = "Delz\PhalconPlus\ServiceProvider\Providers\ModelsMetaData"
;php模板引擎服务
phpEngine = "Delz\PhalconPlus\ServiceProvider\Providers\PhpTemplateEngine"
;随机数生成服务
random = "Delz\PhalconPlus\ServiceProvider\Providers\Random"
;Request服务
request = "Delz\PhalconPlus\ServiceProvider\Providers\Request"
;Response 服务
response = "Delz\PhalconPlus\ServiceProvider\Providers\Response"
;注解路由服务
router = "Delz\PhalconPlus\ServiceProvider\Providers\RouterAnnotations"
;session服务
session = "Delz\PhalconPlus\ServiceProvider\Providers\Session"
;网址服务
url = "Delz\PhalconPlus\ServiceProvider\Providers\Url"
;视图服务
view = "Delz\PhalconPlus\ServiceProvider\Providers\View"
;volt模板引擎服务
voltEngine = "Delz\PhalconPlus\ServiceProvider\Providers\VoltTemplateEngine"
;数据库日志服务
dblogger = "Delz\PhalconPlus\ServiceProvider\Providers\Logger"
;数据库分析服务
dbProfileLogger = "Delz\PhalconPlus\ServiceProvider\Providers\Logger"
;资源管理服务
assets = "Delz\PhalconPlus\ServiceProvider\Providers\AssetsManager"
;上下文编码转义服务
escaper = "Delz\PhalconPlus\ServiceProvider\Providers\Escaper"
;表单服务
forms = "Delz\PhalconPlus\ServiceProvider\Providers\FormManager"
;beanstalk队列服务
beanstalk = "Delz\PhalconPlus\ServiceProvider\Providers\Beanstalk"

;下面测试,正式开发请删除
;测试rpc服务关联的用户服务提供者
user-manager = "Delz\PhalconPlus\Hprose\Demo\UserManagerProvider"

[rpc-services]
;下面测试,正式开发请删除
;测试登录rpc服务
login = "Delz\PhalconPlus\Hprose\Demo\UserLoginRpcProvider"

[events]
;数据库监听服务
;默认有两个监听服务:Delz\PhalconPlus\EventListener\DbProfilerListener和Delz\PhalconPlus\EventListener\DbLogListener
;DbProfilerListener是关于数据库性能分析，找出慢查询之类的
;DbLogListener是数据库操作日志
;两者都是用日志模块存储，所以首先要注册一个日志对象存储
;注册dblogger服务用于DbLogListener的日志，dbProfileLogger用于DbProfilerListener的日志
;然后配置db.logger="dblogger"，db.profile.logger="dbProfileLogger"就可以生成日志了
db = "App\Event\DbEventSubscriber"

;过滤器服务
;[filters]
;格式filer_name="filter_class"
;ipv4 = "App\Filters\Ipv4"